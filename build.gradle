plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.15.RELEASE'
  id 'org.springframework.boot' version '2.7.18'
  id 'org.owasp.dependencycheck' version '9.2.0'
  id 'com.github.ben-manes.versions' version '0.39.0'
  id 'org.sonarqube' version '3.3'
  id 'uk.gov.hmcts.java' version '0.12.5'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  include "uk/gov/hmcts/reform/cpo/functional/**"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  enableAssertions = true
  scanForTestClasses = true
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

checkstyle {
  maxWarnings = 0
  toolVersion = '8.29'
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
  toolVersion = "6.39.0"
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  // https://github.com/pmd/pmd/issues/876
  ruleSets = []
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
  executionData(test)
  reports {
    xml.required = true
    csv.required = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

def sonarExclusions = [
  '**/config/**',
  'CpoUpdateApplication.java'
]


sonarqube {
  properties {
    property "sonar.java.coveragePlugin", "jacoco"
    property "sonar.projectName", "Reform :: cpo-update-service"
    property "sonar.projectKey", "uk.gov.hmcts.reform:cpo-update-service"
    property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    property "sonar.host.url", "https://sonarcloud.io/"
    property "sonar.dynamicAnalysis", "reuseReports"
    property "sonar.java.coveragePlugin", "jacoco"
    property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
    property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
    property "sonar.exclusions", sonarExclusions.join(", ")
    property "sonar.test.exclusions", sonarExclusions.join(", ")
    property "sonar.coverage.exclusions", sonarExclusions.join(", ")
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
  }
}

pmdFunctionalTest.enabled(false)

checkstyleFunctionalTest.enabled(false)

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'config/owasp/suppressions.xml'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
}

apply from: "${rootDir}/cve-resolution-strategy.gradle"


repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'https://jitpack.io' }
}

def reformLoggingVersion = '6.0.1'
def springCloudVersion = '2021.0.9'

def versions = [
  restAssured : '4.2.0',
  serenity                : '2.2.12',
  serenityCucumber        : '1.9.51'
]

ext['tomcat.version'] = '9.0.88' // CVE-2021-42340, CVE-2022-23181, CVE-2022-29885, CVE-2022-34305
ext['netty.version'] = '4.1.100.Final' // CVE-2022-25647

dependencyManagement {
  imports {
    mavenBom "org.springframework.boot:spring-boot-dependencies:2.7.18"
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    mavenBom 'org.apache.logging.log4j:log4j-bom:2.17.0'
  }
  dependencies {
    // CVE-2021-27568, CVE-2023-1370
    dependencySet(group: 'net.minidev', version: '2.5.1') {
      entry 'json-smart'
    }
    // CVE-2023-35116
    dependency group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'
    dependency group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0'
    dependency group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.0'

    // CVE-2023-3635
    dependency group: 'com.squareup.okio', name: 'okio', version: '3.4.0'
  }
}

dependencies {
    compileOnly 'com.sun.xml.bind:jaxb-osgi:2.3.1'
    implementation 'junit:junit:4.13.2'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
    implementation group: 'org.springframework.retry', name: 'spring-retry'
    implementation group: 'org.springframework', name: 'spring-aspects'
    implementation group: 'org.hibernate', name: 'hibernate-validator', version: '7.0.1.Final'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.28'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.28'

    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-webmvc-core', version: '1.7.0'

    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: reformLoggingVersion
    implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: reformLoggingVersion

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.17.1'

    implementation group: 'com.azure', name: 'azure-core', version: '1.49.0'
    implementation group: 'com.azure', name: 'azure-messaging-servicebus', version: '7.17.0'
    implementation (group: 'com.microsoft.azure', name: 'azure-servicebus', version: '3.6.7') {
      exclude module: 'adal4j'
    }

    implementation group: 'com.github.hmcts', name: 'auth-checker-lib', version: '3.0.3'

    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '5.2.0'

    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'
    implementation group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.1.0'

    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.37.3'

    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '3.3.0'
    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
      exclude group: 'junit', module: 'junit'
      exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.apiguardian:apiguardian-api:1.0.0')

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath

    functionalTestAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
    functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.28'
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-cucumber', version: versions.serenityCucumber
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-screenplay', version: versions.serenity
    functionalTestImplementation group: 'io.rest-assured', name: 'xml-path', version: versions.restAssured
    functionalTestImplementation group: 'io.rest-assured', name: 'json-path', version: versions.restAssured
    functionalTestImplementation group: 'org.jboss.aerogear', name: 'aerogear-otp-java', version: '1.0.0'
    functionalTestImplementation sourceSets.main.runtimeClasspath
    functionalTestImplementation sourceSets.test.runtimeClasspath


    smokeTestImplementation sourceSets.main.runtimeClasspath
    smokeTestImplementation sourceSets.test.runtimeClasspath
  }

mainClassName = 'uk.gov.hmcts.reform.CpoUpdateApplication'

bootJar {
  archiveFileName = "cpo-update-service.jar"

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processSmokeTestResources") {
  duplicatesStrategy = 'include'
}

rootProject.tasks.named("processFunctionalTestResources") {
  duplicatesStrategy = 'include'
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
